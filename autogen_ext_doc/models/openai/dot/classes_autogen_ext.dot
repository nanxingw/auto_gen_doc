digraph "classes_autogen_ext" {
rankdir=BT
charset="utf-8"
"autogen_ext.models.openai._openai_client.AzureOpenAIChatCompletionClient" [color="black", fontcolor="black", label=<{AzureOpenAIChatCompletionClient|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"autogen_ext.models.openai.config.AzureOpenAIClientConfiguration" [color="black", fontcolor="black", label=<{AzureOpenAIClientConfiguration|api_version : Required[str]<br ALIGN="LEFT"/>azure_ad_token : str<br ALIGN="LEFT"/>azure_ad_token_provider : Callable<br ALIGN="LEFT"/>azure_deployment : str<br ALIGN="LEFT"/>azure_endpoint : Required[str]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"autogen_ext.models.openai._openai_client.BaseOpenAIChatCompletionClient" [color="black", fontcolor="black", label=<{BaseOpenAIChatCompletionClient|capabilities<br ALIGN="LEFT"/>|actual_usage(): RequestUsage<br ALIGN="LEFT"/>count_tokens(messages: Sequence[LLMMessage], tools: Sequence[Tool \| ToolSchema]): int<br ALIGN="LEFT"/>create(messages: Sequence[LLMMessage], tools: Sequence[Tool \| ToolSchema], json_output: Optional[bool], extra_create_args: Mapping[str, Any], cancellation_token: Optional[CancellationToken]): CreateResult<br ALIGN="LEFT"/>create_from_config(config: Dict[str, Any]): ChatCompletionClient<br ALIGN="LEFT"/>create_stream(messages: Sequence[LLMMessage], tools: Sequence[Tool \| ToolSchema], json_output: Optional[bool], extra_create_args: Mapping[str, Any], cancellation_token: Optional[CancellationToken]): AsyncGenerator[Union[str, CreateResult], None]<br ALIGN="LEFT"/>remaining_tokens(messages: Sequence[LLMMessage], tools: Sequence[Tool \| ToolSchema]): int<br ALIGN="LEFT"/>total_usage(): RequestUsage<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"autogen_ext.models.openai.config.BaseOpenAIClientConfiguration" [color="black", fontcolor="black", label=<{BaseOpenAIClientConfiguration|api_key : str<br ALIGN="LEFT"/>max_retries : int<br ALIGN="LEFT"/>model : str<br ALIGN="LEFT"/>model_capabilities : ModelCapabilities<br ALIGN="LEFT"/>timeout : Union[float, None]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"autogen_ext.models.openai.config.CreateArguments" [color="black", fontcolor="black", label=<{CreateArguments|frequency_penalty : Optional[float]<br ALIGN="LEFT"/>logit_bias : Optional[Dict[str, int]]<br ALIGN="LEFT"/>max_tokens : Optional[int]<br ALIGN="LEFT"/>n : Optional[int]<br ALIGN="LEFT"/>presence_penalty : Optional[float]<br ALIGN="LEFT"/>response_format<br ALIGN="LEFT"/>seed : Optional[int]<br ALIGN="LEFT"/>stop : Union[Optional[str], List[str]]<br ALIGN="LEFT"/>temperature : Optional[float]<br ALIGN="LEFT"/>top_p : Optional[float]<br ALIGN="LEFT"/>user : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"autogen_ext.models.openai._openai_client.OpenAIChatCompletionClient" [color="black", fontcolor="black", label=<{OpenAIChatCompletionClient|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"autogen_ext.models.openai.config.OpenAIClientConfiguration" [color="black", fontcolor="black", label=<{OpenAIClientConfiguration|base_url : str<br ALIGN="LEFT"/>organization : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"autogen_ext.models.openai.config.ResponseFormat" [color="black", fontcolor="black", label=<{ResponseFormat|type : Literal['text', 'json_object']<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"autogen_ext.models.openai._openai_client.AzureOpenAIChatCompletionClient" -> "autogen_ext.models.openai._openai_client.BaseOpenAIChatCompletionClient" [arrowhead="empty", arrowtail="none"];
"autogen_ext.models.openai._openai_client.OpenAIChatCompletionClient" -> "autogen_ext.models.openai._openai_client.BaseOpenAIChatCompletionClient" [arrowhead="empty", arrowtail="none"];
"autogen_ext.models.openai.config.AzureOpenAIClientConfiguration" -> "autogen_ext.models.openai.config.BaseOpenAIClientConfiguration" [arrowhead="empty", arrowtail="none"];
"autogen_ext.models.openai.config.BaseOpenAIClientConfiguration" -> "autogen_ext.models.openai.config.CreateArguments" [arrowhead="empty", arrowtail="none"];
"autogen_ext.models.openai.config.OpenAIClientConfiguration" -> "autogen_ext.models.openai.config.BaseOpenAIClientConfiguration" [arrowhead="empty", arrowtail="none"];
"autogen_ext.models.openai.config.ResponseFormat" -> "autogen_ext.models.openai.config.CreateArguments" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="response_format", style="solid"];
}
