digraph "classes_autogen_agentchat" {
rankdir=BT
charset="utf-8"
"web_surfer._types.DOMRectangle" [color="black", fontcolor="black", label=<{DOMRectangle|bottom : Union[int, float]<br ALIGN="LEFT"/>height : Union[int, float]<br ALIGN="LEFT"/>left : Union[int, float]<br ALIGN="LEFT"/>right : Union[int, float]<br ALIGN="LEFT"/>top : Union[int, float]<br ALIGN="LEFT"/>width : Union[int, float]<br ALIGN="LEFT"/>x : Union[int, float]<br ALIGN="LEFT"/>y : Union[int, float]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"web_surfer._types.InteractiveRegion" [color="black", fontcolor="black", label=<{InteractiveRegion|aria_name : str<br ALIGN="LEFT"/>rects : List[DOMRectangle]<br ALIGN="LEFT"/>role : str<br ALIGN="LEFT"/>tag_name : str<br ALIGN="LEFT"/>v_scrollable : bool<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"web_surfer._multimodal_web_surfer.MultimodalWebSurfer" [color="black", fontcolor="black", label=<{MultimodalWebSurfer|DEFAULT_DESCRIPTION : str<br ALIGN="LEFT"/>DEFAULT_START_PAGE : str<br ALIGN="LEFT"/>MLM_HEIGHT : int<br ALIGN="LEFT"/>MLM_WIDTH : int<br ALIGN="LEFT"/>SCREENSHOT_TOKENS : int<br ALIGN="LEFT"/>VIEWPORT_HEIGHT : int<br ALIGN="LEFT"/>VIEWPORT_WIDTH : int<br ALIGN="LEFT"/>animate_actions : bool<br ALIGN="LEFT"/>browser_channel : str \| None<br ALIGN="LEFT"/>browser_data_dir : str \| None<br ALIGN="LEFT"/>debug_dir : str \| None<br ALIGN="LEFT"/>default_tools : list<br ALIGN="LEFT"/>did_lazy_init : bool<br ALIGN="LEFT"/>downloads_folder : str \| None<br ALIGN="LEFT"/>headless : bool<br ALIGN="LEFT"/>inner_messages : List[AgentMessage]<br ALIGN="LEFT"/>logger : NoneType, RootLogger<br ALIGN="LEFT"/>model_usage : List[RequestUsage]<br ALIGN="LEFT"/>n_lines_page_text : int<br ALIGN="LEFT"/>produced_message_types<br ALIGN="LEFT"/>start_page : str<br ALIGN="LEFT"/>to_resize_viewport : bool<br ALIGN="LEFT"/>to_save_screenshots : bool<br ALIGN="LEFT"/>use_ocr : bool<br ALIGN="LEFT"/>|close(): None<br ALIGN="LEFT"/>on_messages(messages: Sequence[ChatMessage], cancellation_token: CancellationToken): Response<br ALIGN="LEFT"/>on_messages_stream(messages: Sequence[ChatMessage], cancellation_token: CancellationToken): AsyncGenerator[AgentMessage \| Response, None]<br ALIGN="LEFT"/>on_reset(cancellation_token: CancellationToken): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"web_surfer.playwright_controller.PlaywrightController" [color="black", fontcolor="black", label=<{PlaywrightController|animate_actions : bool<br ALIGN="LEFT"/>downloads_folder : str \| None<br ALIGN="LEFT"/>last_cursor_position : Tuple[float, float], tuple<br ALIGN="LEFT"/>to_resize_viewport : bool<br ALIGN="LEFT"/>viewport_height : int<br ALIGN="LEFT"/>viewport_width : int<br ALIGN="LEFT"/>|add_cursor_box(page: Page, identifier: str): None<br ALIGN="LEFT"/>back(page: Page): None<br ALIGN="LEFT"/>click_id(page: Page, identifier: str): Page \| None<br ALIGN="LEFT"/>fill_id(page: Page, identifier: str, value: str, press_enter: bool): None<br ALIGN="LEFT"/>get_focused_rect_id(page: Page): str<br ALIGN="LEFT"/>get_interactive_rects(page: Page): Dict[str, InteractiveRegion]<br ALIGN="LEFT"/>get_page_markdown(page: Page): str<br ALIGN="LEFT"/>get_page_metadata(page: Page): Dict[str, Any]<br ALIGN="LEFT"/>get_visual_viewport(page: Page): VisualViewport<br ALIGN="LEFT"/>get_webpage_text(page: Page, n_lines: int): str<br ALIGN="LEFT"/>gradual_cursor_animation(page: Page, start_x: float, start_y: float, end_x: float, end_y: float): None<br ALIGN="LEFT"/>hover_id(page: Page, identifier: str): None<br ALIGN="LEFT"/>on_new_page(page: Page): None<br ALIGN="LEFT"/>page_down(page: Page): None<br ALIGN="LEFT"/>page_up(page: Page): None<br ALIGN="LEFT"/>remove_cursor_box(page: Page, identifier: str): None<br ALIGN="LEFT"/>scroll_id(page: Page, identifier: str, direction: str): None<br ALIGN="LEFT"/>sleep(page: Page, duration: Union[int, float]): None<br ALIGN="LEFT"/>visit_page(page: Page, url: str): Tuple[bool, bool]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"web_surfer._types.VisualViewport" [color="black", fontcolor="black", label=<{VisualViewport|clientHeight : Union[int, float]<br ALIGN="LEFT"/>clientWidth : Union[int, float]<br ALIGN="LEFT"/>height : Union[int, float]<br ALIGN="LEFT"/>offsetLeft : Union[int, float]<br ALIGN="LEFT"/>offsetTop : Union[int, float]<br ALIGN="LEFT"/>pageLeft : Union[int, float]<br ALIGN="LEFT"/>pageTop : Union[int, float]<br ALIGN="LEFT"/>scale : Union[int, float]<br ALIGN="LEFT"/>scrollHeight : Union[int, float]<br ALIGN="LEFT"/>scrollWidth : Union[int, float]<br ALIGN="LEFT"/>width : Union[int, float]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"web_surfer._events.WebSurferEvent" [color="black", fontcolor="black", label=<{WebSurferEvent|action : str \| None<br ALIGN="LEFT"/>arguments : Dict[str, Any] \| None<br ALIGN="LEFT"/>message : str<br ALIGN="LEFT"/>source : str<br ALIGN="LEFT"/>url : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"web_surfer.playwright_controller.PlaywrightController" -> "web_surfer._multimodal_web_surfer.MultimodalWebSurfer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_playwright_controller", style="solid"];
}
